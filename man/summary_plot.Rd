% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/summary_plot.R
\name{summary_plot}
\alias{summary_plot}
\title{SHAP Summary Plot}
\usage{
summary_plot(variable_values, shap_values, names = NULL)
}
\arguments{
\item{variable_values}{A data frame of the  values of the variables that
caused the given SHAP values, generally will be the same data frame or
matrix that was passed to the model for prediction.}

\item{shap_values}{A data frame of shap values, either returned by \code{mshap()}
or obtained from the python \code{{shap}} module.}

\item{names}{A character vector of variable names, corresponding to the
order of the columns in both \code{variable_values} and \code{shap_values}. If
\code{NULL} (default), then the column names of the \code{variable_values} are
taken as \code{names}.}
}
\value{
A \code{{ggplot2}} object
}
\description{
A Function for obtaining a beeswarm plot, similar to the summary plot
in the \code{{shap}} python package.
}
\details{
This function allows the user to pass a data frame of SHAP values and
variable values and returns a ggplot object displaying a general summary
of the effect of Variable level on SHAP value by variable.
It is created with \code{{ggbeeswarm}}, and the returned value is a \code{{ggplot2}}
object that can be modified for given themes/colors.

Please note that for the \code{variable_values} and \code{shap_values} arguments,
both of which are data frames, the columns must be in the same order.
This is essential in assuring that the variable values and labels are
matched to the correct shap values.
}
\examples{
# run vignette("mshap", package = "mshap") for examples
}
